// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//IMPLICIT M:N

model Profile {
  id        Int     @id @default(autoincrement())
  status    String? @db.VarChar(255)
  user      User    @relation(fields: [userId], references: [id])
  userId    Int     @unique
}

model Diem {
  id         Int       @id @default(autoincrement())
  title      String    @db.VarChar(255)
  events     String[]
  users      User[]   @relation(references: [id])
  // created    DateTime  @default(now())
  // author      User @relation(fields:[authorId], references: [id])
  // authorId    Int
}

model User {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  // diems     Diem[]
  profile   Profile?
  diems     Diem[]  @relation(references: [id])
}





// // EXPLICIT M:N

// model Profile {
//   id        Int     @id @default(autoincrement())
//   status    String? @db.VarChar(255)
//   user      User    @relation(fields: [userId], references: [id])
//   userId    Int     @unique
// }

// model Diem {
//   id         Int       @id @default(autoincrement())
//   title      String    @db.VarChar(255)
//   events     String[]
//   users      UserDiem[]
//   // created    DateTime  @default(now())
//   // author      User @relation(fields:[authorId], references: [id])
//   // authorId    Int
// }

// model User {
//   id        Int       @id @default(autoincrement())
//   name      String    @db.VarChar(255)
//   // diems     Diem[]
//   profile   Profile?
//   diems     UserDiem[]
// }
// model UserDiem {
//   id        Int       @default(autoincrement())
//   user      User      @relation(fields: [userId], references: [id])
//   diem      Diem      @relation(fields: [diemId], references: [id])
//   diemId    Int
//   userId    Int
//   @@id([userId, diemId])
// }

// model IncludedUser {
//   id        Int      @id @default(autoincrement())
//   diem Diem @relation(fields:[diemId], references: [id])
//   diemId  Int
//   includedUsers User  @relation(fields:[includedUsersId], references: [id])
//   includedUsersId Int

// }





// model Events {

// }

// model Chat {

// }

// model Post {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   title     String   @db.VarChar(255)
//   content   String?
//   published Boolean  @default(false)
//   author    User     @relation(fields: [authorId], references: [id])
//   authorId  Int
// }

// model Profile {
//   id     Int     @id @default(autoincrement())
//   bio    String?
//   user   User    @relation(fields: [userId], references: [id])
//   userId Int     @unique
// }

// model User {
//   id      Int      @id @default(autoincrement())
//   email   String   @unique
//   mobile  Int      @unique
//   name    String?
//   posts   Post[]
//   profile Profile?
// }